package PickHero

import DummyRecycler
import ClosureTimers
import GladiatorShop
import LinkedList
import Scene
import HashMap
import RegisterEvents
import ShopIntro
import GladiatorSystem
import GameSettings
import Troll

let CAMERA = gg_cam_Barracks
public let BARRACKS_RECT = gg_rct_BarracksFog
let CAM_LOCK_DUMMY = DummyRecycler.get(BARRACKS_RECT.getCenter() + vec2(0,200 ), angle(0))

let playersPickingHero = new LinkedList<player>
let selectionCallbacks = new HashMap<player,CallbackPeriodic> 
let camLockCallbacks = new HashMap<player,CallbackPeriodic> 


public function player.isPickingGladiator() returns bool
    return playersPickingHero.has(this)


public function player.startPickHero()
    if( not DEBUG or not SKIP_HERO_SELECTION)
        playersPickingHero.add(this)

        let callback = doPeriodically(0.04) cb ->
            this.cameraSetupApply(true, CAMERA, 0)
            this.setCameraTargetControllerNoZ( CAM_LOCK_DUMMY, vec2(0,0), false)
        camLockCallbacks.put(this, callback)

        new Scene()
        ..do( p -> p.fadeIn(1.5))
        ..wait(1.5)
        ..do( p -> p.toggleCinematicMode(false, 1.5))
        ..wait(1.5)
        ..do( p -> SND_MESSAGE.playForPlayer(p) )
        ..do( p -> p.print("\nChoose your gladiator", 1000) )
        ..do( p -> p.lockToShop() )
        ..play(this)
    
    else
        this.toggleCinematicMode(false, 0)
        this.startShopIntro(TROLL)

    
function player.lockToShop()

    let timerCb = doPeriodically(0.04) cb ->
        this.clearSelection()
        this.selectSingle(gladiatorShop)
    selectionCallbacks.put(this, timerCb)


function player.choseGladiator( unit chosenGladiator )
    //RemoveUnitFromStock(gladiatorShop, chosenGladiator.getTypeId())
    destroy selectionCallbacks.getAndRemove(this)
    this.clearSelection()

    let gladiatorType = chosenGladiator.getTypeId().getGladiatorType()
    chosenGladiator.remove()

    gladiatorType.getSoundOnNewAbility().playForPlayer(this)

    let scene = new Scene()
    ..wait(2)
    ..do( p -> p.fadeOut(1, null))
    ..wait(1)
    scene.do() p ->
        if( p == localPlayer )
            ClearTextMessages()
    scene.do() p -> 
        destroy camLockCallbacks.getAndRemove(this)
        p.startShopIntro(gladiatorType)
    scene.play(this)

        
init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELL) ->
        if( GetSellingUnit() == gladiatorShop )
            let soldUnit = GetSoldUnit()
            let buyingPlayer = GetBuyingUnit().getOwner()
            
            buyingPlayer.choseGladiator(soldUnit)
            


    

