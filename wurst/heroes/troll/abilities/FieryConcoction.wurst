package FieryConcoction


import AbilityTools
import ClosureTimers
import Projectile

import MyLibrary
import Voodoo
import initlater TrollMasteries


//================================================================================================================================================================================================
// Settings


let DMG_FACTOR  = 1.5
let RADIUS      = 150.

let VOODOO_DMG_FACTOR = 0.02

let BURN_RADIUS         = 150.
let BURN_DMG_FACTOR     = 0.20
let BURN_DURATION       = 15.
let BURN_FREQ           = 1.


// // =========================================================================================================


public let TROLL_FIERY_CONCOCTION = compiletime(defineAOE1(
    "Fiery Concoction",
    ("Throw a fiery concoction, which deals {0} of your Power as damage to all enemies it hits. "+
        "Enemies within the fiery explosion are set on fire, and will take {1} of your Power in damage every second, for {2} seconds.\n\n"+
        "This ability consumes all your voodoo, and its damage is increased by {3} for each charge consumed.").format(
        DMG_FACTOR.toPercentageString(),
        BURN_DMG_FACTOR.toPercentageString(),
        BURN_DURATION.toInt().toString(),
        VOODOO_DMG_FACTOR.toPercentageString()
    ),
    Icons.bTNLiquidFire,
    "Q",
    10.,
    40,
    600,
    RADIUS,
    "attack"
))

let FIERY_CONCOCTION_BUFF = compiletime(defineBuff(
    "Fiery Concoction", "Taking damage periodically",
    Icons.bTNLiquidFire,
    Abilities.flameStrikeEmbers, "chest", ""
))

let SND_EXPLODE = new SoundDefinition(Sounds.alchemistAcidBurnMissileDeath1, false, true)

//================================================================================================================================================================================================
init
    registerSpellEffectEvent(TROLL_FIERY_CONCOCTION) ->
        onCast()

function onCast()
    let caster = GetSpellAbilityUnit()
    let targetPos = vec2(GetSpellTargetX(), GetSpellTargetY())
    
    let voodoo = caster.consumeVoodoo()

    let projectile = new Projectile(caster.getPos().withTerrainZ(60), Abilities.batTrollMissile)
    ..firePoint(targetPos.withTerrainZ(), 700, 0.6)
    projectile.getEffect().setScale(1.25)

    projectile
    ..addActionOnFinish() ->
        SND_EXPLODE.playOnPoint(targetPos.withTerrainZ())

        addEffect( Abilities.fireLordDeathExplode, targetPos.withTerrainZ(100))
        ..setScale(1)
        ..destr()

        addEffect( Objects.smallFlameSpawn, targetPos)
        ..setScale(1)
        ..setTime(0.5)
        ..setTimeScale(2.)
        
        let baseDmg = caster.getPower() * (1+voodoo*VOODOO_DMG_FACTOR)
        let burnDmg = caster.getPower() * BURN_DMG_FACTOR

        // Effect
        let explodeDmg = baseDmg * DMG_FACTOR
        let wildFireLvl = caster.getOwner().getMasteryLevel(WILDFIRE)
        let wildFireFreq = wildFireLvl > 0 ? (WILDFIRE_FREQ_BASE - WILDFIRE_FREQ_RED * (wildFireLvl-1)).toReal() : 0.
        forEnemiesInRange( caster.getOwner(), targetPos, RADIUS ) target ->
            caster.damageTargetSpell( target, explodeDmg )
            target.applyBuff(new FieryConcoctionBuff(burnDmg, wildFireFreq), caster, BURN_DURATION)
            target.addEffect( Abilities.incinerateBuff,  "chest" )
            ..destr()


class FieryConcoctionBuff extends Buff
    let WILDFIRE_RADIUS = 200.

    CallbackPeriodic spreadCb = null
    CallbackPeriodic damageCb = null
    real damage
    real wildFireFreq = 0

    construct(real damage, real wildFireFreq)
        super(FIERY_CONCOCTION_BUFF, true)
        this.damage = damage
        this.wildFireFreq = wildFireFreq

    ondestroy
        if( spreadCb != null )
            destroy spreadCb

    override function onApply()
        if( target != null )
            // Reducing freq by small amount to allow for x-1 damage ticks with x duration
            damageCb = doPeriodically(BURN_FREQ*0.99) (CallbackPeriodic cb) ->
                source.damageTargetSpell(target, damage)
            if( wildFireFreq > 0 )
                spreadCb = doPeriodically(wildFireFreq * GetRandomReal(0.97, 0.99)) (CallbackPeriodic cb) ->
                    spread()
        
    override function onRemove()
        if( damageCb != null )
            destroy damageCb
            damageCb = null

    function spread()
        if( target != null )
            let targets = enemiesInRange(source.getOwner(), target.getPos(), WILDFIRE_RADIUS)
            for u in targets
                if( u.hasBuff(FIERY_CONCOCTION_BUFF, source) )
                    targets.removeUnit(u)
            
            if( targets.size() > 0)
                let spreadTarget = targets.getNearestUnit(target.getPos())
                spreadTarget.applyBuff(new FieryConcoctionBuff(damage, wildFireFreq), source, remainingDuration())

    

        

    
                    

                
                
                
            
            
            

                
                

        
    
