package GladiatorSystem

import public Gladiator

public function player.newGladiator( GladiatorType gladType, vec2 spawnPos, angle facing ) returns Gladiator
    return new Gladiator(gladType, this, spawnPos, facing)
    
/** Checks if the unit is a Gladiator - meaning that it has connected to a Gladiator instance */
public function unit.isGladiator() returns boolean
    return Gladiator.isUnitGladiator(this)

/** Gets the Gladiator instance of a certain player. Returns null, if the unit doesn't have an instance */
public function player.getGladiator() returns Gladiator
    return Gladiator.getInstance(this)

/** Gets the Gladiator's unit for a certain player. Returns null, if player doesn't have a gladiator */
public function player.getGladiatorUnit() returns unit
    return Gladiator.getInstance(this).getUnit()

public function unit.getGladiatorType() returns GladiatorType
    return this.getGladiatorInstance().getGladiatorType()

/** Gets the Gladiator instance of a certain unit. Returns null, if the unit doesn't have an instance */
public function unit.getGladiatorInstance() returns Gladiator
    if not this.isGladiator()
        return null
    return Gladiator.getInstance(this)

/** Returns the GladiatorType instance, which has this unit type id
    as its "unit". */
public function int.getGladiatorType() returns GladiatorType
    for gladiatorType in GladiatorType.getAllTypes()
        if( gladiatorType.getUnitType() == this )
            return gladiatorType
    return null

/** Selects the player's gladiator for the given player.
      lockSelection: whether the selection should be locked to the Gladiator (only has an effect if player has enabled selection lock) */
public function player.selectGladiator()
    this.selectSingle(this.getGladiatorUnit())